# This workflow will build a .NET project and publish a release
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Continuous Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./RapidMessageCast
    - name: Build
      run: dotnet build --no-restore
      working-directory: ./RapidMessageCast
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./RapidMessageCast
    - name: Publish
      run: dotnet publish -c Release -o ./publish
      working-directory: ./RapidMessageCast
    - name: Archive build
      run: zip -r ./RapidMessageCast/publish/RapidMessageCast.zip ./RapidMessageCast/publish/*
    - name: Delete old releases
      run: |
        releases=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                          -H "Accept: application/vnd.github.v3+json" \
                          https://api.github.com/repos/${{ github.repository }}/releases | jq -r '.[].id')
        for release in $releases; do
          curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/repos/${{ github.repository }}/releases/$release
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: "Indev Build - ${{ github.sha }}"
        body: "This is an indev build and should not be used for production use."
        draft: false
        prerelease: true
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RapidMessageCast/publish/RapidMessageCast.zip
        asset_name: RapidMessageCast.zip
        asset_content_type: application/zip
